var B_fixations_scheme = NGL.ColormakerRegistry.addScheme(function (params) {
this.atomColor = function (atom) {
if (atom.resno == 0) {return 0xfff5f0}
else if ([1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221].includes(atom.resno)) {return 0xfff5f0}
else if ([2, 18, 55, 57, 77, 123, 124, 150, 155, 160, 201, 212].includes(atom.resno)) {return 0xfdcab5}
else if ([32, 46, 121].includes(atom.resno)) {return 0xfc8a6a}
else {return 0xfff5f0}
}})


var A_fixations_scheme = NGL.ColormakerRegistry.addScheme(function (params) {
this.atomColor = function (atom) {
if (atom.resno == 0) {return 0xfff5f0}
else if ([1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 51, 52, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 125, 127, 128, 129, 130, 132, 134, 136, 138, 139, 141, 147, 148, 149, 150, 151, 152, 153, 154, 161, 162, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 191, 194, 195, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 211, 214, 215, 216, 218, 219, 220, 221, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329].includes(atom.resno)) {return 0xfff5f0}
else if ([2, 121, 124, 131, 135, 137, 142, 160, 173, 197, 217, 226, 262, 276, 311].includes(atom.resno)) {return 0xfc8a6a}
else if ([3, 25, 33, 45, 48, 53, 54, 57, 75, 78, 82, 92, 94, 122, 126, 140, 143, 146, 157, 163, 171, 186, 188, 190, 192, 196, 198, 202, 207, 212, 213, 222, 223, 227, 242, 244, 248, 260, 275, 299, 307, 312].includes(atom.resno)) {return 0xfdcab5}
else if ([50, 62, 83, 133, 155, 158, 159, 172, 193, 225, 278].includes(atom.resno)) {return 0xf14432}
else if ([144, 145, 156].includes(atom.resno)) {return 0xbc141a}
else if ([189].includes(atom.resno)) {return 0x67000d}
else {return 0xfff5f0}
}})


